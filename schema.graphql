type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TradeApproved @entity(immutable: true) {
  id: Bytes!
  tradeId: BigInt! # uint256
  socialNode: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TradeRejected @entity(immutable: true) {
  id: Bytes!
  tradeId: BigInt! # uint256
  socialNode: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TradeSettled @entity(immutable: true) {
  id: Bytes!
  tradeId: BigInt! # uint256
  user: Bytes! # address
  wasteTokenAmount: BigInt! # uint256
  usdcAmount: BigInt! # uint256
  totalEmission: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TradeSubmitted @entity(immutable: true) {
  id: Bytes!
  tradeId: BigInt! # uint256
  user: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Trade @entity{
  id: String!
  socialNode: Bytes # address
  user: Bytes # address
  wasteTokenAmount: BigInt # uint256
  usdcAmount: BigInt # uint256
  totalEmission: BigInt # uint256
  status: String
  blockNumber: BigInt
  blockTimestamp: BigInt
  transactionHash: Bytes
  submitedAt: BigInt
  approvedAt: BigInt
}

type TradeDay @entity{
  id: String!
  tradeCount: BigInt # uint256
  carbonEmissionCount: BigInt # uint256
  usdcCount: BigInt # uint256
  date: Int
}

type TradeHour @entity{
  id: String!
  tradeCount: BigInt # uint256
  carbonEmissionCount: BigInt # uint256
  usdcCount: BigInt # uint256
  hourStartUnix: Int
}

type TradeTotal @entity{
  id: String!
  tradeCount: BigInt # uint256
  carbonEmissionCount: BigInt # uint256
  usdcCount: BigInt # uint256
}

